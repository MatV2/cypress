name: Cypress Screenshots CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    # Permet de d√©clencher manuellement le workflow

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      
      - name: Install Dependencies
        run: npm install
      
      - name: Cypress run
        id: cypress
        uses: cypress-io/github-action@v6
        with:
          build: npm run build
          start: npm start
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 120
        continue-on-error: true
      
      - name: Upload Screenshots
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          retention-days: 30
      
      - name: Generate Screenshot Report
        if: always()
        run: |
          echo "## Cypress Screenshots Report" > screenshot-report.md
          echo "Screenshots g√©n√©r√©es pendant les tests Cypress" >> screenshot-report.md
          find cypress/screenshots -type f -name "*.png" | while read -r file; do
            echo "- $(basename "$file")" >> screenshot-report.md
          done
      
      - name: Upload Screenshot Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: screenshot-report
          path: screenshot-report.md
          retention-days: 30
      
      - name: Create Issue on Test Failure
        if: steps.cypress.outcome == 'failure'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Fonction pour extraire les erreurs des logs Cypress
            function extractCypressErrors() {
              let errors = [];
              
              try {
                // Chercher les fichiers de logs Cypress
                const logsDir = path.join(process.env.GITHUB_WORKSPACE, 'cypress', 'logs');
                if (fs.existsSync(logsDir)) {
                  const logFiles = fs.readdirSync(logsDir).filter(file => file.endsWith('.log'));
                  
                  for (const logFile of logFiles) {
                    const logContent = fs.readFileSync(path.join(logsDir, logFile), 'utf8');
                    
                    // Extraire les erreurs li√©es aux attributs data-cy manquants
                    const dataCyErrors = logContent.match(/Expected to find element: \'\[data-cy="[^"]+"\]\'[^\n]*/g) || [];
                    errors = errors.concat(dataCyErrors);
                  }
                }
              } catch (error) {
                console.error('Erreur lors de l\'extraction des erreurs Cypress:', error);
              }
              
              return errors.length > 0 ? errors : ['Des tests Cypress ont √©chou√©, mais les d√©tails sp√©cifiques ne sont pas disponibles.'];
            }
            
            // Cr√©er un titre pour l'issue
            const title = `üêû √âchec des tests Cypress - Attributs data-cy manquants`;
            
            // Extraire les erreurs des logs Cypress
            const errors = extractCypressErrors();
            
            // Cr√©er le corps de l'issue
            const body = `## √âchec des tests Cypress
            
            Des attributs data-cy requis sont manquants dans le code HTML. Ces attributs sont n√©cessaires pour les tests automatis√©s.
            
            ### Erreurs d√©tect√©es:
            
            ${errors.map(error => `- ${error}`).join('\n')}
            
            ### Informations sur l'ex√©cution:
            
            - **Workflow:** ${process.env.GITHUB_WORKFLOW}
            - **Commit:** ${process.env.GITHUB_SHA}
            - **Branche:** ${process.env.GITHUB_REF}
            - **Ex√©cut√© par:** ${process.env.GITHUB_ACTOR}
            - **Date:** ${new Date().toISOString()}
            
            ### Comment r√©soudre ce probl√®me:
            
            1. V√©rifiez que tous les √©l√©ments HTML requis ont les attributs data-cy appropri√©s
            2. Consultez le fichier de test \`cypress/e2e/data_cy_validation.cy.js\` pour voir la liste compl√®te des attributs data-cy attendus
            3. Corrigez les attributs manquants et poussez les modifications
            
            [Voir les d√©tails de l'ex√©cution du workflow](https://github.com/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID})
            `;
            
            // Cr√©er l'issue
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['bug', 'cypress', 'data-cy', 'automated']
            });
            
            console.log('Issue cr√©√©e avec succ√®s pour les tests Cypress √©chou√©s.');
      
      - name: Check Cypress Test Results
        if: always()
        run: |
          if [ "${{ steps.cypress.outcome }}" == "failure" ]; then
            echo "‚ùå Les tests Cypress ont √©chou√©. Une issue a √©t√© cr√©√©e."
            exit 1
          else
            echo "‚úÖ Tous les tests Cypress ont r√©ussi!"
          fi